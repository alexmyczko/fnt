#!/usr/bin/env bash
# vim autoindent noexpandtab
set -e

# APT but only for fonts
# alex@aiei.ch
#
# selfupdate=https://raw.githubusercontent.com/alexmyczko/fnt/main/fnt

#TMPDIR="${TMPDIR:-/tmp}"
TMPDIR="${HOME}/.fnt"
PACKAGES="${TMPDIR}/Packages.xz"
# debian sid index
#INDEX="http://ftp.ch.debian.org/debian/dists/sid/main/binary-all/Packages.xz"
MIRROR="http://deb.debian.org/debian"
INDEX="${MIRROR}/dists/sid/main/binary-all/Packages.xz"
# google fonts index
GINDEX="https://sid.ethz.ch/debian/google-fonts/fonts-master/"

if ! command -v uname &>/dev/null; then
	s="Windows"
else
	s=$(uname -s)
fi

case "$s" in
	Darwin)
		#echo macOS
		check="curl brew otfinfo chafa"
		# otfinfo comes with lcdf-typetools
		i="brew"
		md5="md5"
		target="$HOME/Library/Fonts/"
	;;
	Linux|GNU/kFreeBSD|GNU)
		#echo Linux
		check="curl chafa otfinfo"
		i="apt"
		md5="md5sum"
		target="$HOME/.fonts/"
		if [ 0 -eq "$(id -u)" ]; then
			target="/usr/local/share/fonts/"
			mkdir -p $target
		fi
	;;
	FreeBSD)
		#echo FreeBSD
		check="curl chafa otfinfo"
		i="pkg"
		md5="md5"
		target="$HOME/.fonts/"
	;;
	Haiku)
		#echo Haiku OS
		check="curl"
		i="pkgman"
		target="$HOME/config/non-packaged/data/fonts/"
	;;
	Windows)
		#echo Windows
		check="cmd.exe"
		i="ENOPKGMANAGER"
		target="$USERPROFILE\\Fonts"
	;;
	*)
		echo "Please report $s to https://github.com/alexmyczko/fnt/issues"
		exit 1
	;;
esac

for a in $check; do
	if ! command -v "$a" &>/dev/null; then
		echo "$a not found, please use $i to install it."
		exit 1
	fi
done

if [ -z "$1" ]; then
	echo "Syntax: fnt [ update | list | info ]"
	echo "        fnt [ install | remove | preview | search ] font"
	echo
	echo "update|-u  updates the font package index of debian sid"
	echo "list|-l    lists installed fonts with glyphcount per font"
	echo "info       information about how many fonts can be installed"
	echo "install|-i install a font"
	echo "remove|-r  remove a font"
	echo "preview|-p preview a font"
	echo "search|-s  search for font"
	echo
	exit 0
fi

case "$1" in
	update|-u)
		echo Updating...
		mkdir -p "${TMPDIR}"
		if [ -f "${PACKAGES}" ]; then rm "${PACKAGES}"; fi
		curl -s "$INDEX" -o "${PACKAGES}"
	;;

	info)
		echo "Information..."
		echo "Available Fonts: $(fnt search | wc -l)"
	;;

	list|-l)
		# echo Listing...
		# macOS mainly comes with *.ttc (truetype font collections, that can not be processed by otfinfo)
		#ls -1 /System/Library/Fonts/*.?tf /usr/share/fonts/*type/*/*.?tf $HOME/Library/Fonts/*.?tf $HOME/.fonts/*.?tf 2>/dev/null | while read f; do
		find "${HOME}"/{Library,.fonts}/ /usr/local/share/fonts -iname '*.?tf' | while read -r f; do
			echo "$(basename "${f}") [ $(otfinfo -u "$f" 2>/dev/null | wc -l) ]"
		done
		# ls -1 "$HOME"/Library/Fonts/*.?tf "$HOME"/.fonts/*.?tf /usr/local/share/fonts/*.?tf 2>/dev/null | while read f; do
		# 	echo "$f" [ $(otfinfo -u "$f" 2>/dev/null | wc -l | awk '{print $1}') ] | sed s,.*/,,
		# done
	;;
	preview|-p)
		if [ ! $# -eq 2 ]; then
			echo "No fontname supplied."
			echo "Example: ${BASH_SOURCE[0]} preview agave"
			exit 1
		fi
		# echo Previewing...
		mkdir -p "${TMPDIR}"
		rm "${TMPDIR}/preview.png"
		PRINTED=
		if curl -L -s "https://screenshots.debian.net/screenshot/fonts-$2" -o "${TMPDIR}/preview.png"; then
			# if we get nothing / "this picture is not available" pic
			if [ "$($md5 "${TMPDIR}/preview.png" | awk '{print$1}')" = "b5765b390157e36eaf721c8848a4b04d" ]; then
				if curl -L -s "https://sid.ethz.ch/fonts/$2/preview.png" -o "${TMPDIR}/preview.png"; then
					chafa -c 240 -w 9 -O 9 -p on --symbols all "${TMPDIR}/preview.png" 2>/dev/null && PRINTED=1
				fi
			else
				chafa -c 240 -w 9 -O 9 -p on --symbols all "${TMPDIR}/preview.png" 2>/dev/null && PRINTED=1
			fi
		fi
		if [ "$PRINTED" != "1" ]; then
			echo "Couldn't retrieve a preview."
		fi
		#chafa --invert -c none --symbols block+border-solid "${TMPDIR}/preview.png"
		#chafa -c 240 -w 9 -O 9 -p on --symbols all "${TMPDIR}/preview.png"
	;;
	install|-i)
		if [ ! -f "${PACKAGES}" ]; then
			echo "Could not find ${PACKAGES}"
			echo "Please run ${BASH_SOURCE[0]} update"
			# could also just run itself with update...
			exit 1
		fi
		if [ ! $# -eq 2 ]; then
			echo "No fontname supplied."
			echo "Example: ${BASH_SOURCE[0]} install agave"
			exit 1
		fi
		if [ ! -d "${target}" ]; then
			mkdir -p "${target}"
		fi
		# cat $HOME/.fnt/Packages.xz |unxz|grep "^Package:\|^Homepage:\|^Size:\|^Installed-Size:\|^Description:"
		# cat $HOME/.fnt/Packages.xz |unxz| awk '!NF{print line; line=""}{line=line " " $0}' |grep "Package: fonts-"
		# p=$(unxz -c "${PACKAGES}" | grep -v "^Architecture:\|^Section:\|^Priority:\|^Replaces:\|^Provides:\|^Brekas:\|^Maintainer:\|^MD5sum:\|^Source:\|^Breaks:\|^Multi-Arch:\|^Description-\|^Tag:\|^SHA256:"|awk '!NF{print line; line=""}{line=line " " $0}' |grep "Package: fonts-"|grep "fonts-$2"|head -1)
		p="$(unxz -c "${PACKAGES}" | awk '/^Package: fonts-'"$2"'/ {gsub(/^Package: /,"");print;exit;}')"
		# Package: fonts-agave Version: 37-1 Installed-Size: 364 Description: monospaces programming font Homepage: https://b.agaric.net/page/agave Filename: pool/main/f/fonts-agave/fonts-agave_37-1_all.deb Size: 103112

		if [ -z "$p" ]; then
			q=$(curl -s "$GINDEX/ofl/" |grep "a href" |sed 's,.*">,google-,;s,/.*,,' |grep "$2" | head -1)
			s=$(curl -s "$GINDEX/apache/" |grep "a href" |sed 's,.*">,google-,;s,/.*,,' |grep "$2" | head -1)

			if [ -z "$q" ] && [ -z "$s" ]; then
				echo "Font \"$2\" not found"
				exit 1
			else
				echo "Installing google-${2}"
				# here comes the google web font installer part using grep '\..tf'
				curl -s "$GINDEX/ofl/${2}/" |grep "a href" |grep "\..tf" |sed 's,.*tf.>,,' | sed 's,</..*,,' | while read -r f; do
					curl -g -s "${GINDEX}/ofl/${2}/$f" -o "$target/$f"
				done
			curl -s "$GINDEX/apache/${2}/" |grep "a href" |grep "\..tf" |sed 's,.*tf.>,,' | sed 's,</..*,,' | while read -r f; do
				curl -g -s "${GINDEX}/apache/${2}/$f" -o "$target/$f"
			done
			exit 0
			fi
		fi

		# get package infos
		name="$p"
		infos="$(unxz -c "${PACKAGES}" | awk "/^Package: ${name}$/,/^$/" | awk '/^(Version|Installed-Size|Filename|Size): /')"
		ver="$(echo "$infos" | awk '/^Version: /{print$2}')"
		instsize="$(echo "$infos" | awk '/^Installed-Size: /{print$2}')"
		downsize="$(echo "$infos" | awk '/^Size: /{print$2}')"
		fpath="$(echo "$infos" | awk '/^Filename: /{print$2}')"
		f="$(basename "$fpath")"
		echo "Installing ${name} ${ver} [${downsize} ${instsize}000 ${MIRROR}/${fpath}]..."
		curl -s "${MIRROR}/${fpath}" -o "${TMPDIR}/$f"
		cd "${TMPDIR}" || exit 1
		data="$(ar t "$f" | grep '^data.')"
		ar x "$f" "$data"
		tar xf "$data"
		find "${TMPDIR}" -name "*.?tf" -exec cp {} "$target" \;
		rm "$f" "$data"
		rm -rf "${TMPDIR:?}/"{usr,etc}
	;;
	remove|-r)
		echo "Removing..."
		echo "Feel free to send patches or dollars (see the sponsor link)"
	;;
	search|-s)
		if [ -f "${PACKAGES}" ]; then
			unxz -c "${PACKAGES}" | awk '/^Package: fonts-'"$2"'/ {gsub(/^Package: /,"");print;}'
		fi
		curl -s "$GINDEX/ofl/" |grep "a href" |sed 's,.*">,google-,;s,/.*,,' |grep -v "\.\.$" |grep "$2"
		curl -s "$GINDEX/apache/" |grep "a href" |sed 's,.*">,google-,;s,/.*,,' |grep -v "\.\.$" |grep "$2"
	;;
	moo)
		echo "This fnt does not have cow powers."
	;;
	wak)
		echo ' _()< wak wak'
		echo '(__)'
	;;
	quak)
		cat << 'EOF'
 _______
< QUAK? >
 -------
     \
      \
          oO)-.                       .-(Oo
         /__  _\                     /_  __\
         \  \(  |     ()~()         |  )/  /
          \__|\ |    (-___-)        | /|__/
          '  '--'    ==`-'==        '--'  '

EOF
	;;
	*)
		echo "Nothing..."
	;;
esac
